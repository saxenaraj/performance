buildscript {
    apply from: 'versions.gradle'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVer"
    }
}
plugins {
    id "org.sonarqube" version "2.5"
}

apply plugin: 'application'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.automationanywhere.cognitive'
version '1.0'

sourceCompatibility = 1.8
mainClassName = 'com.automationanywhere.cognitive.iqbot.Main'

repositories {
    mavenCentral()
}

dependencies {
    compile "com.opencsv:opencsv:${openCsvVer}"
    compile "org.apache.poi:poi:${poiVer}"
	compile "org.apache.poi:poi-ooxml:${poiOoxmlVer}"
    compile 'org.springframework.boot:spring-boot-starter-log4j2'

    testCompile "org.testng:testng:${testNgVer}"
    testCompile "org.assertj:assertj-core:${assertjVer}"
    testCompile "org.mockito:mockito-core:${mockitoVer}"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// START SNIPPET define-main
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/java','src/main/resources']; include "**/*.*"
        }
    }
// END SNIPPET define-main
    test {
        java {
            srcDir 'test/java'
        }
        resources {
            srcDir 'test/resources'
        }
    }
// START SNIPPET define-main
}
// END SNIPPET define-main

compileJava {
    options.warnings = true
    options.deprecation = true
    // -Werror should be used and makes the build fail for Xlint issues
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
    println 'Compiler args for src: ' + options.compilerArgs
}

compileTestJava {
    options.warnings = true
    options.deprecation = true
    // -Werror should be used and makes the build fail for Xlint issues
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
    println 'Compiler args for test: ' + options.compilerArgs
}

apply plugin: 'org.springframework.boot'
bootRepackage {
    mainClass = mainClassName
}
